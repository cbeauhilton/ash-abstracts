name: Scrape abstracts

on:
  push:
    branches:
    - main
  schedule:
    - cron: '47 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v2
    - name: Checkout ash-files
      uses: actions/checkout@v2
      with:
        repository: cbeauhilton/ash-files
        path: scrape_ash/scrape_ash/ash-files
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN_FOR_PUSH }}
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r scraping-requirements.txt
    - name: Make sure data directories exist
      run: |-
        cd scrape_ash/scrape_ash/
        mkdir -p data
        mkdir -p data/doi_json
        mkdir -p ash-files/doi_json
    - name: Download abstract database
      run: |-
        cd scrape_ash/scrape_ash/data/
        curl --fail -O https://github.com/cbeauhilton/ash-db/releases/download/database/abstracts.db
      continue-on-error: true
    - name: Download url database
      run: |-
        cd scrape_ash/scrape_ash/data/
        curl --fail -O https://github.com/cbeauhilton/ash-db/releases/download/database/urls.db
      continue-on-error: true
    - name: Scrape abstracts
      id: scrape
      if: |-
        contains(github.event.head_commit.message, 'ABSTRACT') || (github.event_name == 'schedule')
      run: |-
        cd scrape_ash/scrape_ash/
        echo "CLOSESPIDER_PAGECOUNT = 200" >> settings.py
        echo "CLOSESPIDER_ITEMCOUNT = 300" >> settings.py
        scrapy crawl abstracts
    - name: Commit scraped files
      if: steps.scrape.outcome == 'success'
      run: |-
        echo " " > .gitignore
        cd scrape_ash/scrape_ash/
        cp data/doi_json/*.json ash-files/doi_json/
        cd ash-files
        git config --global user.name "abstract bot"       
        git config --global user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit --allow-empty  -m "Updated abstract data: ${timestamp}"
        git push
    - name: Upload to releases
      if: steps.scrape.outcome == 'success'
      uses: softprops/action-gh-release@v1
      with:
        repository: cbeauhilton/ash-db
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN_FOR_PUSH }}
        tag_name: "database"
        files: |
          scrape_ash/scrape_ash/urls.db
          scrape_ash/scrape_ash/abstracts.db
