name: Make database

on:
  workflow_run:
    workflows: ["Scrape DOI", "Scrape abstracts"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v2
    - name: Checkout ash-db
      uses: actions/checkout@v2
      with:
        repository: cbeauhilton/ash-db
        path: ash-db
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN_FOR_PUSH }}
    - name: Checkout ash-files
      uses: actions/checkout@v2
      with:
        repository: cbeauhilton/ash-files
        path: ash-files
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN_FOR_PUSH }}
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sqlite-utils
    - name: Make db json
      run: |-
        find ash-files/doi_json -maxdepth 1 -type f -name \*.json -exec cat {} + | jq -s . > db.json
    - name: Make full db
      run: |-
        sqlite-utils insert ash-db/abstracts_full.db abstracts db.json --pk=doi --alter
        sqlite-utils enable-counts ash-db/abstracts_full.db
        sqlite-utils enable-fts ash-db/abstracts_full.db abstracts article_title abstract_text author_names author_affiliations
        sqlite-utils optimize ash-db/abstracts_full.db
    - name: Make smaller db for Vercel
      run: |-
        sqlite-utils ash-db/abstracts_full.db "SELECT * from abstracts WHERE is_scraped=1 LIMIT 5000" | sqlite-utils insert ash-db/abstracts.db abstracts - --pk=doi
        sqlite-utils enable-counts ash-db/abstracts.db
        sqlite-utils enable-fts ash-db/abstracts.db abstracts article_title abstract_text author_names author_affiliations
        sqlite-utils optimize ash-db/abstracts.db
    - name: Make db for scraping
      run: |-
        sqlite-utils ash-db/abstracts_full.db "SELECT * from abstracts WHERE is_scraped=0" | sqlite-utils insert ash-db/unscraped.db unscraped - --pk=doi
        sqlite-utils enable-counts ash-db/unscraped.db
    - name: Echo current db info
      run: |-
        cd ash-db
        echo ""
        echo "Current number of items in db:"
        sqlite-utils abstracts_full.db "SELECT count(*) from abstracts"
        echo ""
        echo "Current number of scraped items in db:"
        sqlite-utils abstracts_full.db "SELECT count(*) from abstracts WHERE is_scraped = 1"
    - name: Update readme
      run: |-
        cd ash-db
        timestamp=$(date -u)
        echo "Databases last updated: ${timestamp}. " > README.md
        echo "" >> README.md
        echo "Available [here](https://github.com/cbeauhilton/ash-db/releases)." >> README.md
        echo "" >> README.md
        du -h unscraped.db >> README.md
        echo "" >> README.md
        du -h abstracts.db >> README.md
        echo "" >> README.md
        du -h abstracts_full.db >> README.md
        git config --global user.name "db bot"       
        git config --global user.email "actions@users.noreply.github.com"
        git remote prune origin
        git add README.md
        git commit --amend --no-edit
        git push --force
    - name: Upload to releases
      uses: softprops/action-gh-release@v1
      with:
        repository: cbeauhilton/ash-db
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN_FOR_PUSH }}
        tag_name: "database"
        files: |
          ash-db/abstracts_full.db
          ash-db/abstracts.db
          ash-db/unscraped.db
