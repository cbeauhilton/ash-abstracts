name: Scrape DOI

on:
  schedule:
    - cron: '12 3 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v2
    - name: Checkout ash-files
      uses: actions/checkout@v2
      with:
        repository: cbeauhilton/ash-files
        path: scrape_ash/scrape_ash/ash-files
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN_FOR_PUSH }}
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r scraping-requirements.txt
    - name: Scrape DOI from beginning
      if: |-
        contains(github.event.head_commit.message, 'CLEAN_DOI')
      run: |-
        echo " " > .gitignore
        cd scrape_ash/scrape_ash/
        mkdir -p ash-files/doi_json
        cat gha_settings.py > settings.py
        scrapy crawl dois
        cp data/doi_json/*.json ash-files/doi_json/
        cd ash-files
        git config --global user.name "DOI bot"       
        git config --global user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit --allow-empty  -m "Latest data: ${timestamp}"
        git push
    - name: Scrape DOI
      if: |-
        !contains(github.event.head_commit.message, 'CLEAN_DOI') && contains(github.event.head_commit.message, 'DOI') || github.event_name == 'schedule'
      run: |-
        curl --fail -OL https://github.com/cbeauhilton/ash-db/releases/download/database/abstracts.db
        export START_URL_PAGE_NUM=$(sqlite3 abstracts.db "select MAX(start_url_page_num) from abstracts")
        echo " " > .gitignore
        cd scrape_ash/scrape_ash/
        cat gha_settings.py > settings.py
        scrapy crawl dois
        mkdir -p ash-files/doi_json
        cp data/doi_json/*.json ash-files/doi_json/
        cd ash-files
        git config --global user.name "DOI bot"       
        git config --global user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit --allow-empty -m "Latest data: ${timestamp}"
        git push
